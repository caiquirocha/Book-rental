TODO:
/* SAFARI BOOKS GIVES US ALL BOOKS WHICH CAN BE AVAILABLE IN LIBRARY. LIBRARY HAVE LIST OF AVAILABLE BOOKS (ONE OF SAFARI BOOK API WITH UNIQUE ID)
-fetching list all books from SafariBook API
-add button to fetch list all books from SafariBook API
-handling with destroyed books
-how many copy of given book is in the library (add,remove)
-unique qr code per student // maybe it would be not necessary
-to pay for overdue
-discuss payments in app

//Admin (book.rental.p.lodz.pl / admin12345678)
-How many copy of given book is in the library (add,remove)
DONE:
-Initially project configuration
-Initial Firebase configuration
-Login into application functionality
-Register in application functionality (
-send verification email functionality (here example: https://firebase.googleblog.com/2017/02/email-verification-in-firebase-auth.html)
-buy some new books request button
-check his account (how many books are borrowed already) - po co to?
-Borrowing and returning books functionality (which student, which book, from, to etc.) - to improve
-access to book library (checking which books are available, which aren't available)
-giving id for every book, every book has own qrcode
-reserve book (24h) / cancel reservation


/*
Example data for testing: SafariBooks Downloader
https://github.com/nicohaenggi/SafariBooks-Downloader

Roles:
-student -> registering (email with suffix p.lodz.pl, confirme by click on link on email box), loging, access to book library, unique qr code, request for library buying the book
reserve the book (24h), check account of borrowed and reserved books, cancel reservation, pay for overdue, destroy
-admin -> how many copy of given book is in the library (add, remove), confirm borrowing and returnig books, 
General requirements:
giving id for every book, every book has qr code, discuss payments in app

  
we have to think about some errors like admin give student wrong book (the same title but with wrong id/qrcode).
*/