TODO:
-giving id for every book, every book has own qrcode
-discuss payments in app

//Student
-Fetching all testing data from SafariBook API
-Add trigger which fetch book from SafariBook API every day
-access to book library (checking which books are available, which aren't available)
-unique qr code
-buy some new books request button
-Borrowing and returning books functionality (which student, which book, from, to etc.)
-reserve book (24h) / cancel reservation
-check his account (how many books are borrowed already)
-pay for overdue
-handling with destroyed books

//Admin
-How many copy of given book is in the library (add,remove)
DONE:
-Initially project configuration
-Initial Firebase configuration
-Login into application functionality
-Register in application functionality (
-send verification email functionality (here example: https://firebase.googleblog.com/2017/02/email-verification-in-firebase-auth.html)



/*
Example data for testing: SafariBooks Downloader
https://github.com/nicohaenggi/SafariBooks-Downloader

Roles:
-student -> registering (email with suffix p.lodz.pl, confirme by click on link on email box), loging, access to book library, unique qr code, request for library buying the book
reserve the book (24h), check account of borrowed and reserved books, cancel reservation, pay for overdue, destroy
-admin -> how many copy of given book is in the library (add, remove), confirm borrowing and returnig books, 
General requirements:
giving id for every book, every book has qr code, discuss payments in app

  
we have to think about some errors like admin give student wrong book (the same title but with wrong id/qrcode).
*/